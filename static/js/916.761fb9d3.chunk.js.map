{"version":3,"file":"static/js/916.761fb9d3.chunk.js","mappings":"ySAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iP,SCCVE,EAAY,SAAC,GAAY,IAAVC,EAAS,EAATA,GAC1B,OACE,UAACJ,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,KACA,qCAGL,E,SCRYC,EAAcJ,EAAAA,EAAAA,IAAH,wDAKXK,EAASL,EAAAA,EAAAA,IAAH,4DAKNM,EAAUN,EAAAA,EAAAA,IAAH,yCAIPO,EAAQP,EAAAA,EAAAA,KAAH,6EAMLQ,EAAcR,EAAAA,EAAAA,GAAH,gDAIXS,EAAOT,EAAAA,EAAAA,GAAH,sHAOJU,EAAOV,EAAAA,EAAAA,GAAH,qEAKJD,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,2GCsDvB,EA7EqB,WAAO,IAAD,IACnBW,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACvCC,GAAWC,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAEd,8GAE8BC,EAAAA,EAAAA,IAAab,EAAS,CAC9Cc,OAAQH,EAAWG,SAHzB,OAEUC,EAFV,OAKIX,EAASW,GALb,gDAOIP,EAAS,IAAK,CAAEQ,SAAS,IAP7B,0DAFc,sBAcd,OAdc,mCAYdC,GAEO,WACLN,EAAWO,OACZ,CACF,GAAE,CAAClB,EAASQ,KAGX,6BACE,SAACnB,EAAD,CAAWC,GAAIe,IACdF,IACC,iCACE,UAACZ,EAAD,YACE,SAACC,EAAD,CACE2B,IACEhB,EAAMiB,cAAN,0CACuCjB,EAAMiB,eACzCC,EAENC,IAAKnB,EAAMoB,SAEb,UAAC9B,EAAD,YACE,wBAAKU,EAAMoB,SACX,wCAAiD,GAAjCC,KAAKC,MAAMtB,EAAMuB,cAAjC,QACA,4BACE,sCACA,uBAAIvB,EAAMwB,eAEZ,4BACE,SAAChC,EAAD,qBACCQ,EAAMyB,OAAOC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACvB,OAAO,SAACrC,EAAD,UAAiBqC,GAALD,EACpB,cAIP,UAAClC,EAAD,YACE,SAACC,EAAD,WACE,SAAC,EAAD,CAAYP,GAAG,OAAOgB,MAAO,CAAEC,KAAMF,GAArC,qBAIF,SAACR,EAAD,WACE,SAAC,EAAD,CAAYP,GAAG,UAAUgB,MAAO,CAAEC,KAAMF,GAAxC,2BAKJ,SAAC,EAAA2B,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/GoBackBtn/GoBackBtn.styled.js","components/GoBackBtn/GoBackBtn.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { BiArrowBack } from 'react-icons/bi';\nimport { StyledLink } from './GoBackBtn.styled';\nimport PropTypes from 'prop-types';\n\nexport const GoBackBtn = ({ to }) => {\n  return (\n    <StyledLink to={to}>\n      <BiArrowBack />\n      <p>Go back</p>\n    </StyledLink>\n  );\n};\n\nGoBackBtn.propTypes = {\n  to: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 500px;\n`;\n\nexport const Content = styled.div`\n  flex-grow: 1;\n`;\n\nexport const Genre = styled.span`\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const GenresTitle = styled.h3`\n  margin-bottom: 16px;\n`;\n\nexport const List = styled.ul`\n  padding-left: 16px;\n  border: 1px solid grey;\n  border-radius: 6px;\n  margin-top: 16px;\n`;\n\nexport const Item = styled.li`\n  padding-top: 8px;\n  padding-bottom: 8px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n\n  :hover {\n    color: #f55138;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { getMovieById } from 'services/fetch';\nimport { GoBackBtn } from 'components/GoBackBtn/GoBackBtn';\nimport image from 'images/poster.png';\nimport {\n  CardWrapper,\n  Poster,\n  Content,\n  GenresTitle,\n  Genre,\n  List,\n  Item,\n  StyledLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  const backLinkHref = location.state?.from ?? '/movies';\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function getMovie() {\n      try {\n        const searchMovie = await getMovieById(movieId, {\n          signal: controller.signal,\n        });\n        setMovie(searchMovie);\n      } catch {\n        navigate('*', { replace: true });\n      }\n    }\n    getMovie();\n\n    return () => {\n      controller.abort();\n    }\n  }, [movieId, navigate]);\n\n  return (\n    <main>\n      <GoBackBtn to={backLinkHref} />\n      {movie && (\n        <>\n          <CardWrapper>\n            <Poster\n              src={\n                movie.backdrop_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`\n                  : image\n              }\n              alt={movie.title}\n            />\n            <Content>\n              <h2>{movie.title}</h2>\n              <p>User score: {Math.round(movie.vote_average) * 10}%</p>\n              <div>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n              </div>\n              <div>\n                <GenresTitle>Genres</GenresTitle>\n                {movie.genres.map(({ id, name }) => {\n                  return <Genre key={id}>{name}</Genre>;\n                })}\n              </div>\n            </Content>\n          </CardWrapper>\n          <List>\n            <Item>\n              <StyledLink to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </StyledLink>\n            </Item>\n            <Item>\n              <StyledLink to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </StyledLink>\n            </Item>\n          </List>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","NavLink","GoBackBtn","to","CardWrapper","Poster","Content","Genre","GenresTitle","List","Item","location","useLocation","movieId","useParams","useState","movie","setMovie","backLinkHref","state","from","navigate","useNavigate","useEffect","controller","AbortController","getMovieById","signal","searchMovie","replace","getMovie","abort","src","backdrop_path","image","alt","title","Math","round","vote_average","overview","genres","map","id","name","Suspense","fallback"],"sourceRoot":""}
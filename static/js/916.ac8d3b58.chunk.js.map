{"version":3,"file":"static/js/916.ac8d3b58.chunk.js","mappings":"gSAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iP,SCAVE,EAAY,SAAC,GAAY,IAAVC,EAAS,EAATA,GAC1B,OAAO,SAACJ,EAAD,CAAYI,GAAIA,EAAhB,oBACR,E,SCFYC,EAAcJ,EAAAA,EAAAA,IAAH,wDAKXK,EAASL,EAAAA,EAAAA,IAAH,4DAKNM,EAAUN,EAAAA,EAAAA,IAAH,yCAIPO,EAAQP,EAAAA,EAAAA,KAAH,6EAMLQ,EAAcR,EAAAA,EAAAA,GAAH,gDAIXS,EAAOT,EAAAA,EAAAA,GAAH,sHAOJU,EAAOV,EAAAA,EAAAA,GAAH,qEAKJD,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,2GCyCvB,EAhEqB,WAAO,IAAD,IACnBW,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACMC,EAAY,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAY7C,OAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BC,EAAAA,EAAAA,IAAaT,GAF3C,OAEUU,EAFV,OAGIN,EAASM,GAHb,wGADc,uBAAC,WAAD,wBAOdC,EACD,GAAE,CAACX,KAGF,6BACE,SAACX,EAAD,CAAWC,GAAIe,IACdF,IACC,UAACZ,EAAD,YACE,SAACC,EAAD,CACEoB,IACET,EAAMU,cAAN,0CACuCV,EAAMU,eACzCC,EAENC,IAAKZ,EAAMa,SAEb,UAACvB,EAAD,YACE,wBAAKU,EAAMa,SACX,wCAAiD,GAAjCC,KAAKC,MAAMf,EAAMgB,cAAjC,QACA,4BACE,sCACA,uBAAIhB,EAAMiB,eAEZ,4BACE,SAACzB,EAAD,qBACCQ,EAAMkB,OAAOC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACvB,OAAO,SAAC9B,EAAD,UAAiB8B,GAALD,EACpB,cAKT,UAAC3B,EAAD,YACE,SAACC,EAAD,WACE,SAAC,EAAD,CAAYP,GAAG,OAAOgB,MAAO,CAAEC,KAAMF,GAArC,qBAIF,SAACR,EAAD,WACE,SAAC,EAAD,CAAYP,GAAG,UAAUgB,MAAO,CAAEC,KAAMF,GAAxC,2BAKJ,SAAC,EAAAoB,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/GoBackBtn/GoBackBtn.styled.js","components/GoBackBtn/GoBackBtn.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { StyledLink } from './GoBackBtn.styled';\nimport PropTypes from 'prop-types';\n\nexport const GoBackBtn = ({ to }) => {\n  return <StyledLink to={to}>Go back</StyledLink>;\n};\n\nGoBackBtn.propTypes = {\n  to: PropTypes.object.isRequired\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 500px;\n`;\n\nexport const Content = styled.div`\n  flex-grow: 1;\n`;\n\nexport const Genre = styled.span`\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const GenresTitle = styled.h3`\n  margin-bottom: 16px;\n`;\n\nexport const List = styled.ul`\n  padding-left: 16px;\n  border: 1px solid grey;\n  border-radius: 6px;\n  margin-top: 16px;\n`;\n\nexport const Item = styled.li`\n  padding-top: 8px;\n  padding-bottom: 8px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n\n  :hover {\n    color: #f55138;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'services/fetch';\nimport { GoBackBtn } from 'components/GoBackBtn/GoBackBtn';\nimport image from 'images/poster.png'\nimport {\n  CardWrapper,\n  Poster,\n  Content,\n  GenresTitle,\n  Genre,\n  List,\n  Item,\n  StyledLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        const searchMovie = await getMovieById(movieId);\n        setMovie(searchMovie);\n      } catch (error) {}\n    }\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <main>\n      <GoBackBtn to={backLinkHref} />\n      {movie && (\n        <CardWrapper>\n          <Poster\n            src={\n              movie.backdrop_path\n                ? `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`\n                : image\n            }\n            alt={movie.title}\n          />\n          <Content>\n            <h2>{movie.title}</h2>\n            <p>User score: {Math.round(movie.vote_average) * 10}%</p>\n            <div>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n            </div>\n            <div>\n              <GenresTitle>Genres</GenresTitle>\n              {movie.genres.map(({ id, name }) => {\n                return <Genre key={id}>{name}</Genre>;\n              })}\n            </div>\n          </Content>\n        </CardWrapper>\n      )}\n      <List>\n        <Item>\n          <StyledLink to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </StyledLink>\n        </Item>\n        <Item>\n          <StyledLink to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </StyledLink>\n        </Item>\n      </List>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","NavLink","GoBackBtn","to","CardWrapper","Poster","Content","Genre","GenresTitle","List","Item","location","useLocation","movieId","useParams","useState","movie","setMovie","backLinkHref","state","from","useEffect","getMovieById","searchMovie","getMovie","src","backdrop_path","image","alt","title","Math","round","vote_average","overview","genres","map","id","name","Suspense","fallback"],"sourceRoot":""}
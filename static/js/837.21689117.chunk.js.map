{"version":3,"file":"static/js/837.21689117.chunk.js","mappings":"6QAGaA,EAAOC,EAAAA,EAAAA,GAAH,6CAIJC,EAAQD,EAAAA,EAAAA,GAAH,8CAILE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,2G,SCPVI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACvB,OACE,SAACV,EAAD,WACE,SAACC,EAAD,CACEU,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMR,GAFjB,SAIGK,GAAgBD,KALTD,EASf,KAGN,ECrBYM,EAAa,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAChD,OACE,kBAAMC,SAAUH,EAAhB,WACE,kBAAOI,KAAK,OAAOV,KAAK,QAAQQ,SAAUA,EAAUD,MAAOA,KAC3D,yCAGL,E,OCiDD,EApDe,WACb,OAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOvB,EAAP,KAAewB,EAAf,KACA,GAAoCD,EAAAA,EAAAA,UAAS,IAA7C,eAAOE,EAAP,KAAmBC,EAAnB,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,2FACED,GAAa,GADf,mBAG+BE,EAAAA,EAAAA,IAAiBX,GAHhD,OAGUY,EAHV,OAIIP,EAAUO,GACVL,EAAc,IACc,IAAxBK,EAAaC,QAAgBb,GAC/Bc,MAAM,2DAPZ,kDAUIZ,EAAS,IAAK,CAAEa,SAAS,IAV7B,yBAYIN,GAAa,GAZjB,8EAFc,sBACA,KAAVT,GAA0B,OAAVA,GADN,mCAiBdgB,EACD,GAAE,CAAChB,EAAOE,IAYX,OACE,iCACE,SAACX,EAAD,CACEC,aAbe,SAAAyB,GACnBA,EAAEC,iBAEFnB,EAAgB,CAAEC,MAAOM,GAC1B,EAUKb,MAAOa,EACPZ,SATe,SAAAuB,GACnBV,EAAcU,EAAEE,OAAO1B,MACxB,IASIe,IAAa,wCACbR,IAAUQ,IAAa,SAAC5B,EAAD,CAAYC,OAAQA,MAGjD,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/SearchForm/SearchForm.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-top: 16px;\n`;\n\nexport const Movie = styled.li`\n  padding: 8px 16px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n\n  :hover {\n    color: #f55138;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes, { arrayOf } from 'prop-types';\nimport { List, Movie, StyledLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <List>\n      {movies.map(({ id, name, title }) => {\n        return (\n          <Movie key={id}>\n            <StyledLink\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title ? title : name}\n            </StyledLink>\n          </Movie>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\n\nexport const SearchForm = ({ handleSubmit, value, onChange }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"movie\" onChange={onChange} value={value} />\n      <button>Submit</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useSearchParams, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { getMoviesByQuery } from 'services/fetch';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const navigate = useNavigate();\n\n  const [movies, setMovies] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query === '' || query === null) return;\n    async function getMoviesList() {\n      setIsLoading(true);\n      try {\n        const searchMovies = await getMoviesByQuery(query);\n        setMovies(searchMovies);\n        setInputValue('');\n        if (searchMovies.length === 0 && query) {\n          alert('We did not find any movies. Please, change your request');\n        }\n      } catch {\n        navigate('*', { replace: true });\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMoviesList();\n  }, [query, navigate]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query: inputValue });\n  };\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <>\n      <SearchForm\n        handleSubmit={handleSubmit}\n        value={inputValue}\n        onChange={handleChange}\n      />\n      {isLoading && <div>Loading...</div>}\n      {query && !isLoading && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","Movie","StyledLink","NavLink","MoviesList","movies","location","useLocation","map","id","name","title","to","state","from","SearchForm","handleSubmit","value","onChange","onSubmit","type","useSearchParams","searchParams","setSearchParams","query","get","navigate","useNavigate","useState","setMovies","inputValue","setInputValue","isLoading","setIsLoading","useEffect","getMoviesByQuery","searchMovies","length","alert","replace","getMoviesList","e","preventDefault","target"],"sourceRoot":""}